### 解题思路

**递归**实现
* 递归出口为n == 1时，返回"1"；
* 当n > 1时，我们只需要计算countAndSay(n - 1)中每个数字的个数：

> * 对于计算字符串中每个数字出现的个数，使用双指针i, j，其中i表示当前字符，j则是计数指针，向后移动判断；
> * 以求n = 5，lastStr = countAndSay(4) = "1211"为例，answer = ""，一开始让i = 0, j = 1，此时'1' != '2'，
> * 故answer += (j - i) + lastStr.charAt(i)，ans = "11"；然后让i = j（第二个不同字符起始位置），
> * 然后j++往后移动；此时i = j = 1，j = j + 1 = 2，又'2' != '1'，
> * 所以answer += (j - i) + lastStr.charAt(i),ans = "1112",重复i = j = 2， j = ++j = 3；此时'1' = '1'；
> * 故直接j = ++j = 4 == lastStr.length()，所以跳出循环，然后把最后一次的字符个数字符加上，即执行：
> * answer += (j - i) + lastStr.charAt(i),ans = "111221"，即countAndSay(5) = "111221"。

### 代码

* java

```java
class Solution {
    public String countAndSay(int n) {
        if (n == 1) return "1";
        else {
            String lastStr = countAndSay(n - 1); // 1 2 1 1
            StringBuilder ans = new StringBuilder();
            int i = 0, j = 1, len = lastStr.length();
            while (j < len) {
                if (lastStr.charAt(i) != lastStr.charAt(j)) {
                    ans.append(j - i).append(lastStr.charAt(i));
                    i = j;
                }
                j++;
            }
            ans.append(j - i).append(lastStr.charAt(i));
            return ans.toString();
        }
    }
}
```

